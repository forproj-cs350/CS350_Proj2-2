<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>CS350_Proj2-2</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <java.version>1.8</java.version>
        <surefireVersion>2.19.1</surefireVersion>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.jenkins.plugins</groupId>
            <artifactId>warnings-ng</artifactId>
            <version>8.1.0</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
            </resource>
            <resource>
                <directory>${project.basedir}</directory>
                <includes>
                    <include>LICENSE-junit.txt</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <!--
            Both "org.apache" and "org.codehaus" are default providers of MOJO plugins
            which are especially dedicated to Maven projects.
            The MOJO stands for "Maven plain Old Java Object".
            Each mojo is an executable goal in Maven, and a plugin is a distribution of
            one or more related mojos.
            For more information see http://maven.apache.org/plugin-developers/index.html

            The following plugins are ordered according the Maven build lifecycle.
            http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
            -->
            <plugin>
                <!--
                Checks that the version of user's maven installation is 3.0.4,
                the JDK is 1.5+, no non-standard repositories are specified in
                the project, requires only release versions of dependencies of other artifacts.
                -->
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <fail>true</fail>
                            <rules>
                                <requireMavenVersion>
                                    <!-- Some plugin features require a recent Maven runtime to work properly -->
                                    <message>Current version of Maven ${maven.version} required to build the project
                                        should be ${project.prerequisites.maven}, or higher!
                                    </message>
                                    <version>[${project.prerequisites.maven},)</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <message>Current JDK version ${java.version} should be ${jdkVersion}, or higher!
                                    </message>
                                    <version>${jdkVersion}</version>
                                </requireJavaVersion>
                                <requireNoRepositories>
                                    <message>Best Practice is to never define repositories in pom.xml (use a repository
                                        manager instead).
                                    </message>
                                </requireNoRepositories>
                                <requireReleaseDeps>
                                    <message>No Snapshots Dependencies Allowed!</message>
                                </requireReleaseDeps>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!--
                Updates Version#id().
                -->
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <version>1.5.3</version>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <ignoreMissingFile>false</ignoreMissingFile>
                    <file>${project.build.sourceDirectory}/junit/runner/Version.java.template</file>
                    <outputFile>${project.build.sourceDirectory}/junit/runner/Version.java</outputFile>
                    <regex>false</regex>
                    <token>@version@</token>
                    <value>${project.version}</value>
                </configuration>
            </plugin>
            <plugin><!-- Using jdk 1.5.0_22, package-info.java files are compiled correctly. -->
                <!--
                java compiler plugin forked in extra process
                -->
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <source>${jdkVersion}</source>
                    <target>${jdkVersion}</target>
                    <testSource>${jdkVersion}</testSource>
                    <testTarget>${jdkVersion}</testTarget>
                    <compilerVersion>1.5</compilerVersion>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <debug>true</debug>
                    <fork>true</fork>
                    <compilerArgs>
                        <arg>-Xlint:unchecked</arg>
                    </compilerArgs>
                    <maxmem>128m</maxmem>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>animal-sniffer-maven-plugin</artifactId>
                <version>1.14</version>
                <executions>
                    <execution>
                        <id>signature-check</id>
                        <phase>test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <signature>
                                <groupId>org.codehaus.mojo.signature</groupId>
                                <artifactId>java15</artifactId>
                                <version>1.0</version>
                            </signature>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!--
                A plugin which uses the JUnit framework in order to start
                our junit suite "AllTests" after the sources are compiled.
                -->
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefireVersion}</version>
                <configuration>
                    <test>org/junit/tests/AllTests.java</test>
                    <useSystemClassLoader>true</useSystemClassLoader>
                    <enableAssertions>false</enableAssertions>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>${surefireVersion}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <!--
                This plugin can package the main artifact's sources (src/main/java)
                in to jar archive. See target/junit-*-sources.jar.
                -->
                <artifactId>maven-source-plugin</artifactId>
                <version>2.4</version>
            </plugin>
            <plugin>
                <!--
                This plugin can generate Javadoc by a forked
                process and then package the Javadoc
                in jar archive target/junit-*-javadoc.jar.
                -->
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.3</version>
                <configuration>
                    <stylesheetfile>${basedir}/src/main/javadoc/stylesheet.css</stylesheetfile>
                    <show>protected</show>
                    <author>false</author>
                    <version>false</version>
                    <detectLinks>false</detectLinks>
                    <linksource>true</linksource>
                    <keywords>true</keywords>
                    <use>true</use>
                    <windowtitle>JUnit API</windowtitle>
                    <encoding>UTF-8</encoding>
                    <locale>en</locale>
                    <javadocVersion>${jdkVersion}</javadocVersion>
                    <javaApiLinks>
                        <property>
                            <name>api_${jdkVersion}</name>
                            <value>http://docs.oracle.com/javase/${jdkVersion}.0/docs/api/</value>
                        </property>
                    </javaApiLinks>
                    <excludePackageNames>*.internal.*</excludePackageNames>
                    <verbose>true</verbose>
                    <minmemory>32m</minmemory>
                    <maxmemory>128m</maxmemory>
                    <failOnError>true</failOnError>
                    <includeDependencySources>true</includeDependencySources>
                    <dependencySourceIncludes>
                        <dependencySourceInclude>org.hamcrest:hamcrest-core:*</dependencySourceInclude>
                    </dependencySourceIncludes>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.2</version>
                <configuration>
                    <mavenExecutorId>forked-path</mavenExecutorId>
                    <useReleaseProfile>false</useReleaseProfile>
                    <arguments>-Pgenerate-docs,junit-release ${arguments}</arguments>
                    <tagNameFormat>r@{project.version}</tagNameFormat>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.4</version>
                <dependencies>
                    <dependency>
                        <groupId>com.github.stephenc.wagon</groupId>
                        <artifactId>wagon-gitsite</artifactId>
                        <version>0.4.1</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.maven.doxia</groupId>
                        <artifactId>doxia-module-markdown</artifactId>
                        <version>1.5</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <archive>
                        <addMavenDescriptor>false</addMavenDescriptor>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Automatic-Module-Name>junit</Automatic-Module-Name>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.6.1</version>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
            </plugin>
            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.9</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <formats>
                        <format>xml</format>
                    </formats>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.7.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.13.0</version>
            </plugin>

        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.8</version>
                <configuration>
                    <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                    <!-- waiting for MPIR-267 -->
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                            <report>dependency-info</report>
                            <report>modules</report>
                            <report>license</report>
                            <report>project-team</report>
                            <report>scm</report>
                            <report>issue-tracking</report>
                            <report>mailing-list</report>
                            <report>dependency-management</report>
                            <report>dependencies</report>
                            <report>dependency-convergence</report>
                            <report>cim</report>
                            <report>distribution-management</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.3</version>
                <configuration>
                    <destDir>javadoc/latest</destDir>
                    <stylesheetfile>${basedir}/src/main/javadoc/stylesheet.css</stylesheetfile>
                    <show>protected</show>
                    <author>false</author>
                    <version>false</version>
                    <detectLinks>false</detectLinks>
                    <linksource>true</linksource>
                    <keywords>true</keywords>
                    <use>true</use>
                    <windowtitle>JUnit API</windowtitle>
                    <encoding>UTF-8</encoding>
                    <locale>en</locale>
                    <javadocVersion>${jdkVersion}</javadocVersion>
                    <javaApiLinks>
                        <property>
                            <name>api_${jdkVersion}</name>
                            <value>http://docs.oracle.com/javase/${jdkVersion}.0/docs/api/</value>
                        </property>
                    </javaApiLinks>
                    <excludePackageNames>junit.*,*.internal.*</excludePackageNames>
                    <verbose>true</verbose>
                    <minmemory>32m</minmemory>
                    <maxmemory>128m</maxmemory>
                    <failOnError>true</failOnError>
                    <includeDependencySources>true</includeDependencySources>
                    <dependencySourceIncludes>
                        <dependencySourceInclude>org.hamcrest:hamcrest-core:*</dependencySourceInclude>
                    </dependencySourceIncludes>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>javadoc</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <formats>
                        <format>xml</format>
                    </formats>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>3.0.0-M5</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.13.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.1</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

        </plugins>
    </reporting>

</project>